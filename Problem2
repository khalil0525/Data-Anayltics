%% Import data from spreadsheet
% Script for importing data from the following spreadsheet:
%
%    Workbook: C:\Users\Hmmm\Desktop\Project1 Data Cleaning Clustering and stat description\Data for Preprocessing and plotting.xlsx
%    Worksheet: Sheet2
%
% Auto-generated by MATLAB on 25-Sep-2019 20:05:33

%% Setup the Import Options
opts = spreadsheetImportOptions("NumVariables", 7);

% Specify sheet and range
opts.Sheet = "Sheet2";
opts.DataRange = "B3:H71";

% Specify column names and types
opts.VariableNames = ["Experiment1", "Experiment2", "Experiment3", "Experiment4", "Experiment5", "Experiment6", "Experiment7"];
opts.SelectedVariableNames = ["Experiment1", "Experiment2", "Experiment3", "Experiment4", "Experiment5", "Experiment6", "Experiment7"];
opts.VariableTypes = ["double", "double", "double", "double", "double", "double", "double"];

% Import the data
T1 = readtable("C:\Users\Hmmm\Desktop\Project1 Data Cleaning Clustering and stat description\Data for Preprocessing and plotting.xlsx", opts, "UseExcel", false);

%code to print the experiment stat vals before changing 0's
for i = 1:7
    fprintf('Experiment %i(before): Min=%i Max=%i Mean=%i Med=%i Mode=%i Rng=%i Var=%i Std=%i Skew=%i\n',i, min(T1{:, i}), max(T1{:, i}), mean(T1{:, i}), ...
    median(T1{:, i}), mode(T1{:, i}), range(T1{:, i}), var(T1{:, i}), std(T1{:, i}), skewness(T1{:, i}));
    
end

%code to change the 0's
for nb = 1:7
    MeanCol = mean(T1{:, nb});
    for i = 1:69
        if T1{i, nb} == 0
            T1{i, nb} = MeanCol;
        end
        
    end
end
%code to print the experiment stat vals afterchanging 0's
for i = 1:7
    fprintf('Experiment %i(after): Min=%i Max=%i Mean=%i Med=%i Mode=%i Rng=%i Var=%i Std=%i Skew=%i\n',i, min(T1{:, i}), max(T1{:, i}), mean(T1{:, i}), ...
    median(T1{:, i}), mode(T1{:, i}), range(T1{:, i}), var(T1{:, i}), std(T1{:, i}), skewness(T1{:, i}));
end

%Code to build a plot
fprintf('here');
x = linspace(1,69,69);
h = plot(x,T1{:,1}, '- .b',x,T1{:, 2},'- .k', x,T1{:,3},'- .y',x,T1{:,4},'- .m', x,T1{:,5},'- .c',x,T1{:,6},'- .r', x,T1{:,7},'- .g');
legend(sprintf('E1 - M/S:%i/%i ', mean(T1{:, 1}), std(T1{:, 1})) ,sprintf('E2 - M/S:%i/%i ', mean(T1{:, 2}), std(T1{:, 2})), ...
    sprintf('E3 - M/S:%i/%i ', mean(T1{:, 3}), std(T1{:, 3})), sprintf('E4 - M/S:%i/%i ', mean(T1{:, 4}), std(T1{:, 4})), ...
    sprintf('E5 - M/S:%i/%i ', mean(T1{:, 5}), std(T1{:, 5})), sprintf('E6- M/S:%i/%i ', mean(T1{:, 6}), std(T1{:, 6})),...
    sprintf('E7 - M/S:%i/%i ', mean(T1{:, 7}), std(T1{:, 7})));
title('Cleaned data')
xlabel('Index')
ylabel('Value')


hold on

writetable(T1,'Data for Preprocessing and plotting cleaned.xls');

%% Clear temporary variables
clear opts
